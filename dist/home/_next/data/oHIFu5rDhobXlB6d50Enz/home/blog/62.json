{"pageProps":{"blog":{"id":62,"title":"[链接提交] ETag帮助网站提交网站地图~ eTag ETAG简介及功能","keywords":"SEO优化,关键词优化,网站建设","description":"(实体标签)是网址的标签，用于指示网址对象是否已更改，以便可以利用客户端的缓存(例如浏览器)。首先由服务器生成，客户端请求服务器通过向","thumbnail":"https://oss.faycz.com/c7a26296-37d2-4ee4-b512-751373904530fay.jpeg","createTime":"2020-07-14T15:26:39.000Z","updateTime":"2020-07-31T13:34:56.000Z","content":"{\"blocks\":[{\"key\":\"foo\",\"text\":\"(实体标签)是网址的标签，用于指示网址对象是否已更改，以便可以利用客户端的缓存(例如浏览器)。首先由服务器生成，客户端请求服务器通过向服务器返回令牌来验证其(客户端)缓存。服务器使用它来确定页面是否已经被修改，如果没有，则返回304，而不必重新传输整个对象。2.站点地图1中存在的问题。当发现更新不及时或网站地图更新时，百度很难及时发现并做出回应，因为百度很难持续检查网站内容和网站地图是否一直在更新。2.全量抓取，带宽消耗百度的网站地图抓取现在将网站地图文件完全下载。鉴于网站地图文件通常很大，而且这种下载可能会发生很多次，这将消耗网站的流量和带宽。第三，ETag HTTP1.1使用ETag来判断所请求的文件是否已经被修改，主要是为了解决上次修改不能解决的一些问题。1.某些文件可能会定期更改，但它们的内容不会更改(仅更改时间)。此时，客户端不想认为文件已经被修改并重新获取。2.有些文件修改非常频繁，一秒钟内修改n次。如果修改，接收器可以检查的粒度是二阶的。这种修改不能判断3。有些服务器无法准确获取文件的最后修改时间。为此，HTTP1.1引入了Etag。然而，该标准没有具体说明Etag的内容是什么或如何实施。唯一的要求是Etag应该用双引号括起来。服务器生成Etag，客户端通过判断请求是否匹配或不匹配来验证资源是否被修改。我们通常使用如果不匹配。请求文件的过程可以如下:第一个请求:1 .客户端启动HTTP GET请求文件；2.服务器处理该请求，并返回文件内容和一堆标题，包括Etag(例如，“1ec5-502264e2ae4c0(假设服务器支持Etag生成并已打开Etag)。状态码200，如下图所示，第一次请求百度主页时，成功获得百度标识图片文件bd_logo1.png，状态码200，大小8.1KB。返回的标题包括ETAG(“ETag(“1e C5-502264 e2a E4 c 0”)。第二个要求:1。客户端发起一个文件的HTTP GET请求。此时，客户端同时发送一个如果不匹配的报头。这个头的内容是服务器在我们第一次请求时返回的Etag: 1EC5-502264e2AE 4C02。服务器判断发送的Etag和计算的ETAG匹配，不返回200，返回304，并允许客户端继续使用本地缓存。如图所示，对于bd_logo1.png的这个请求，服务器只返回了Header，但没有返回大小为349B的内容。4.在站点1上启用ETag的好处。在网站地图上启用ETag后，百度可以更快地响应网站地图上的更新。在不改变内容的情况下，服务器只发回304个响应头，这消耗了很少的流量。在平均每人227元的正常情况下，每天24小时每秒的响应流量仅为1870万平方米。现在网站管理员平台对每个站点的活动站点地图爬行的数量有一个上限，并且这个功能不是对所有站点开放的。如果你的站点地图已经启用了ETag并且通过了测试，你就可以享受到百度在少量流量的情况下及时更新你的站点地图的功能，这样百度就可以更好的收集你站点的内容。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","belongIds":"","status":"ENABLE"},"preBlog":null,"nextBlog":null},"__N_SSG":true}